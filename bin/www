const dotenv = require("dotenv");
var app = require("../index");
const http = require("http");

require("dotenv").config({
  path: "/Users/Nikhil/Desktop/assignment/.env",
});
console.log("process.env.PORT>>>", process.env.PORT);

var port = normalizePort(process.env.PORT);
app.set("port", port);
var server = http.createServer(app);

server.listen(port);

server.on("error", onError);
server.on("listening", onListening);

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}
function onError(error) {
  console.log("+++++am in error +++++");
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  console.log("Server is listening on " + bind);
}
